worker_processes auto;

events {
  # Maximum number of simultaneous connections per worker
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  access_log  /var/log/nginx/access.log;
  error_log   /var/log/nginx/error.log warn;

  sendfile        on;
  keepalive_timeout 65;

  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  client_max_body_size 4G;

  upstream app_servers {
    server ctfd_app:8000;
  }

  # Redirect HTTP -> HTTPS
  server {
    listen 80;
    server_name cyberedx.local;

    return 301 https://$host$request_uri;
  }

  # HTTPS server block (TLS)
  server {
    listen 443 ssl http2;
    server_name cyberedx.local;

    ssl_certificate     /etc/nginx/ssl/ctfd.crt;
    ssl_certificate_key /etc/nginx/ssl/ctfd.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # For SSE (notifications) we need HTTP/1.1 and to disable buffering
    location /events {
      proxy_pass http://app_servers;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_buffering off;
      proxy_cache off;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
      proxy_pass http://app_servers;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
